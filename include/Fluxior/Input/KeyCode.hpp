#pragma once

#include "Key.hpp"

namespace flux
{
    #define KeycodeKeyMask (1<<30)
    #define KeyToKeycode(X)  ((static_cast<int>(X)) | KeycodeKeyMask)
    
    enum class KeyCode
    {
        returnK = '\r',
        escape = '\x1B',
        backspace = '\b',
        tab = '\t',
        space = ' ',
        exclamation = '!',
        doubleQuote = '"',
        hash = '#',
        percent = '%',
        dollar = '$',
        ampersand = '&',
        quote = '\'',
        leftParenthesis = '(',
        rightParenthesis = ')',
        asterisk = '*',
        plus = '+',
        comma = ',',
        minus = '-',
        period = '.',
        slash = '/',
        n0 = '0',
        n1 = '1',
        n2 = '2',
        n3 = '3',
        n4 = '4',
        n5 = '5',
        n6 = '6',
        n7 = '7',
        n8 = '8',
        n9 = '9',
        colon = ':',
        semicolon = ';',
        lessThan = '<',
        equals = '=',
        greaterThan = '>',
        question = '?',
        at = '@',

        leftBracket = '[',
        backSlash = '\\',
        rightBracket = ']',
        caret = '^',
        underscore = '_',
        backQuote = '`',
        a = 'a',
        b = 'b',
        c = 'c',
        d = 'd',
        e = 'e',
        f = 'f',
        g = 'g',
        h = 'h',
        i = 'i',
        j = 'j',
        k = 'k',
        l = 'l',
        m = 'm',
        n = 'n',
        o = 'o',
        p = 'p',
        q = 'q',
        r = 'r',
        s = 's',
        t = 't',
        u = 'u',
        v = 'v',
        w = 'w',
        x = 'x',
        y = 'y',
        z = 'z',

        capsLock = KeyToKeycode(Key::CapsLock),

        f1 = KeyToKeycode(Key::F1),
        f2 = KeyToKeycode(Key::F2),
        f3 = KeyToKeycode(Key::F3),
        f4 = KeyToKeycode(Key::F4),
        f5 = KeyToKeycode(Key::F5),
        f6 = KeyToKeycode(Key::F6),
        f7 = KeyToKeycode(Key::F7),
        f8 = KeyToKeycode(Key::F8),
        f9 = KeyToKeycode(Key::F9),
        f10 = KeyToKeycode(Key::F10),
        f11 = KeyToKeycode(Key::F11),
        f12 = KeyToKeycode(Key::F12),

        printScreen = KeyToKeycode(Key::PrintScreen),
        scrollLock = KeyToKeycode(Key::ScrollLock),
        pause = KeyToKeycode(Key::Pause),
        insert = KeyToKeycode(Key::Insert),
        home = KeyToKeycode(Key::Home),
        pageUp = KeyToKeycode(Key::PageUp),
        deleteK = '\x7F',
        end = KeyToKeycode(Key::End),
        pageDown = KeyToKeycode(Key::PageDown),
        right = KeyToKeycode(Key::Right),
        left = KeyToKeycode(Key::Left),
        down = KeyToKeycode(Key::Down),
        up = KeyToKeycode(Key::Up),

        numLockClear = KeyToKeycode(Key::NumLockClear),
        padDivide = KeyToKeycode(Key::PadDivide),
        padMultiply = KeyToKeycode(Key::PadMultiply),
        padMinus = KeyToKeycode(Key::PadMinus),
        padPlus = KeyToKeycode(Key::PadPlus),
        padEnter = KeyToKeycode(Key::PadEnter),
        pad1 = KeyToKeycode(Key::Pad1),
        pad2 = KeyToKeycode(Key::Pad2),
        pad3 = KeyToKeycode(Key::Pad3),
        pad4 = KeyToKeycode(Key::Pad4),
        pad5 = KeyToKeycode(Key::Pad5),
        pad6 = KeyToKeycode(Key::Pad6),
        pad7 = KeyToKeycode(Key::Pad7),
        pad8 = KeyToKeycode(Key::Pad8),
        pad9 = KeyToKeycode(Key::Pad9),
        pad0 = KeyToKeycode(Key::Pad0),
        padPeriod = KeyToKeycode(Key::Period),

        application = KeyToKeycode(Key::Application),
        power = KeyToKeycode(Key::Power),
        padEquals = KeyToKeycode(Key::PadEquals),
        f13 = KeyToKeycode(Key::F13),
        f14 = KeyToKeycode(Key::F14),
        f15 = KeyToKeycode(Key::F15),
        f16 = KeyToKeycode(Key::F16),
        f17 = KeyToKeycode(Key::F17),
        f18 = KeyToKeycode(Key::F18),
        f19 = KeyToKeycode(Key::F19),
        f20 = KeyToKeycode(Key::F20),
        f21 = KeyToKeycode(Key::F21),
        f22 = KeyToKeycode(Key::F22),
        f23 = KeyToKeycode(Key::F23),
        f24 = KeyToKeycode(Key::F24),
        execute = KeyToKeycode(Key::Execute),
        help = KeyToKeycode(Key::Help),
        menu = KeyToKeycode(Key::Menu),
        select = KeyToKeycode(Key::Select),
        stop = KeyToKeycode(Key::Stop),
        again = KeyToKeycode(Key::Again),
        undo = KeyToKeycode(Key::Undo),
        cut = KeyToKeycode(Key::Cut),
        copy = KeyToKeycode(Key::Copy),
        paste = KeyToKeycode(Key::Paste),
        find = KeyToKeycode(Key::Find),
        mute = KeyToKeycode(Key::Mute),
        volumeUp = KeyToKeycode(Key::VolumeUp),
        volumeDown = KeyToKeycode(Key::VolumeDown),
        padComma = KeyToKeycode(Key::PadComma),
        equalsAs400 = KeyToKeycode(Key::PadEqualsAs400),

        altErase = KeyToKeycode(Key::AltErase),
        sysReq = KeyToKeycode(Key::SysReq),
        cancel = KeyToKeycode(Key::Cancel),
        clear = KeyToKeycode(Key::Clear),
        prior = KeyToKeycode(Key::Prior),
        return2 = KeyToKeycode(Key::Return2),
        separator = KeyToKeycode(Key::Separator),
        out = KeyToKeycode(Key::Out),
        oper = KeyToKeycode(Key::Oper),
        clearAgain = KeyToKeycode(Key::ClearAgain),
        crSel = KeyToKeycode(Key::CrSel),
        exSel = KeyToKeycode(Key::ExSel),

        pad00 = KeyToKeycode(Key::Pad00),
        pad000 = KeyToKeycode(Key::Pad000),
        padThousandsSeparator = KeyToKeycode(Key::PadThousandsSeparator),
        padDecimalSeparator = KeyToKeycode(Key::PadDecimalSeparator),
        padCurrencyUnit = KeyToKeycode(Key::PadCurrencyUnit),
        padCurrencySubUnit = KeyToKeycode(Key::PadCurrencySubUnit),
        padLeftParenthesis = KeyToKeycode(Key::PadLeftParenthesis),
        padRightParenthesis = KeyToKeycode(Key::PadRightParenthesis),
        padLeftBrace = KeyToKeycode(Key::PadLeftBrace),
        padRightBrace = KeyToKeycode(Key::PadRightBrace),
        padTab = KeyToKeycode(Key::PadTab),
        padBackspace = KeyToKeycode(Key::PadBackspace),
        padA = KeyToKeycode(Key::PadA),
        padB = KeyToKeycode(Key::PadB),
        padC = KeyToKeycode(Key::PadC),
        padD = KeyToKeycode(Key::PadD),
        padE = KeyToKeycode(Key::PadE),
        padF = KeyToKeycode(Key::PadF),
        padXOR = KeyToKeycode(Key::PadXOR),
        padPower = KeyToKeycode(Key::PadPower),
        padPercent = KeyToKeycode(Key::PadPercent),
        padLess = KeyToKeycode(Key::PadLess),
        padGreater = KeyToKeycode(Key::PadGreater),
        padAmpersand = KeyToKeycode(Key::PadAmpersand),
        padDoubleAmpersand = KeyToKeycode(Key::PadDoubleAmpersand),
        padVerticalBar = KeyToKeycode(Key::PadVerticalBar),
        padDoubleVerticalBar = KeyToKeycode(Key::PadDoubleVerticalBar),
        padColon = KeyToKeycode(Key::PadColon),
        padHash = KeyToKeycode(Key::PadHash),
        padSpace= KeyToKeycode(Key::PadSpace),
        padAt = KeyToKeycode(Key::PadAt),
        padExclamation = KeyToKeycode(Key::PadExclamation),
        padMemStore = KeyToKeycode(Key::PadMemStore),
        padMemRecall = KeyToKeycode(Key::PadMemRecall),
        padMemClear = KeyToKeycode(Key::PadMemClear),
        padMemAdd = KeyToKeycode(Key::PadMemAdd),
        padMemSubtract = KeyToKeycode(Key::PadMemSubtract),
        padMemMultiply = KeyToKeycode(Key::PadMemMultiply),
        padMemDivide = KeyToKeycode(Key::PadMemDivide),
        padPlusMinus = KeyToKeycode(Key::PadPlusMinus),
        padClear = KeyToKeycode(Key::PadClear),
        padClearEntry = KeyToKeycode(Key::PadClearEntry),
        padBinary = KeyToKeycode(Key::PadBinary),
        padOctal = KeyToKeycode(Key::PadOctal),
        padDecimal = KeyToKeycode(Key::PadDecimal),
        padHexadecimal = KeyToKeycode(Key::PadHexadecimal),

        lCtrl = KeyToKeycode(Key::LCtrl),
        lShift = KeyToKeycode(Key::LShift),
        lAlt = KeyToKeycode(Key::LAlt),
        lGUI = KeyToKeycode(Key::LGUI),
        rCtrl = KeyToKeycode(Key::RCtrl),
        rShift = KeyToKeycode(Key::RShift),
        rAlt = KeyToKeycode(Key::RAlt),
        rGUI = KeyToKeycode(Key::RGUI),

        mode = KeyToKeycode(Key::Mode),

        audioNext = KeyToKeycode(Key::AudioNext),
        audioPrev = KeyToKeycode(Key::AudioPrev),
        audioStop = KeyToKeycode(Key::AudioStop),
        audioPlay = KeyToKeycode(Key::AudioPlay),
        audioMute = KeyToKeycode(Key::AudioMute),
        mediaSelect = KeyToKeycode(Key::MediaSelect),
        www = KeyToKeycode(Key::WWW),
        mail = KeyToKeycode(Key::Mail),
        calculator = KeyToKeycode(Key::Calculator),
        computer = KeyToKeycode(Key::Computer),
        acSearch = KeyToKeycode(Key::ACSearch),
        acHome = KeyToKeycode(Key::ACHome),
        acBack = KeyToKeycode(Key::ACBack),
        acForward = KeyToKeycode(Key::ACForward),
        acStop = KeyToKeycode(Key::ACStop),
        acRefresh = KeyToKeycode(Key::ACRefresh),
        acBookmarks = KeyToKeycode(Key::ACBookmarks),

        brightnessDown = KeyToKeycode(Key::BrightnessDown),
        brightnessUp = KeyToKeycode(Key::BrightnessUp),
        displaySwitch = KeyToKeycode(Key::DisplaySwitch),
        kbdillumToggle = KeyToKeycode(Key::kbdIllumToggle),
        kbdillumDown= KeyToKeycode(Key::kbdIllumDown),
        kbdillumUp = KeyToKeycode(Key::kbdIllumUp),
        eject = KeyToKeycode(Key::Eject),
        sleep = KeyToKeycode(Key::Sleep),
        app1 = KeyToKeycode(Key::App1),
        app2 = KeyToKeycode(Key::App2),

        audioRewind = KeyToKeycode(Key::AudioRewind),
        audioFastForward = KeyToKeycode(Key::AudioFastForward),

        softLeft = KeyToKeycode(Key::SoftLeft),
        softRight = KeyToKeycode(Key::SoftRight),
        call = KeyToKeycode(Key::Call),
        endCall = KeyToKeycode(Key::EndCall)
    };
} // namespace Sling